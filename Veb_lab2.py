#Задание 1 на 25
def polinom(n): #Функция
    x = n #Сохраняем наше число в отдельной переменной
    rev = 0 #Пепеменная для перевёрнутого числа
    while(n > 0): #Цикл для переворачивания числа
        pr = n % 10
        rev = rev * 10 + pr
        n = n // 10
    if(x == rev):
        print("True") #Выводим True, когда число является полиндромом
    else:
        print("False") #Выводим False, когда число не является полиндромом

#Задание 2 на 25
def multiplicity(lst): #Функция
    listmult2 = [] #Список для чисел, которые делятся на 2
    listmult3 = [] #Список для чисел, которые делятся на 3
    listmult5 = [] #Список для чисел, которые делятся на 5
    for i in lst:
        if (i % 2 == 0): #Проверка кратности на 2
            listmult2.append(i)
        if (i % 3 == 0): #Проверка кратности на 3
            listmult3.append(i)
        if (i % 5 == 0): #Проверка кратности на 5
            listmult5.append(i)
    print("Числа делятся на 2: ", listmult2) #Выводим список чисел, которые делятся на 2
    print("Числа делятся на 3: ", listmult3) #Выводим список чисел, которые делятся на 3
    print("Числа делятся на 5: ", listmult5) #Выводим список чисел, которые делятся на 5

#Задание 3 на 25
def reverse(n): #Функция
    rev = 0 #Пепеменная для перевёрнутого числа
    if(n>=0): #Проверка числа на положитиельность
        while(n > 0): #Цикл для переворачивания числа, если оно положительное
            pr = n % 10
            rev = rev * 10 + pr
            n = n // 10
        print("Перевёрнутое число: ", rev) #Выводим перевёрнутое число
    else:
        n=-n
        while(n > 0): #Цикл для переворачивания числа, если оно отрицательное
            pr = n % 10
            rev = rev * 10 + pr
            n = n // 10
        print("Перевёрнутое число: ", -rev) #Выводим перевёрнутое число

n=int(input("Введите чило: "))
polinom(n) #Вызов функции для проверки на полином
reverse(n) #Вызов функции на её переворачивание
lst=input("Введите числа: ").split() 
for i in range(len(lst)): #Обрабатываем список, чтобы числа у нас перешли из string в int
        lst[i] = int(lst[i])
multiplicity(lst) #Вызов функции для проверки на кратность

#Задание 1 на 35

def sqrtN(x):
    err = 1e-7 #Точность
    k = x #Переменная корня
    while abs(k - x/k)>err: #Проверка на абсолютное число
        k = (x/k+k)/2.0
    print(k) #Вывод корня

#Задание 2 на 35

def simple(x): #Функция
    k = 0 #Счетчик
    for i in range(2, x // 2+1): #Цикл проверки на деление
        if (x % i == 0):
            k = k+1
    if (k <= 0):
        print("True") #Выводим True, когда число является простым
    else:
        print("False") #Выводим False, когда число не является простым

x = int(input("Введите число: "))
sqrtN(x) #Вызов функции для вычисления корня методом Ньютона
simple(x) #Вызов функции для проверки на простое число